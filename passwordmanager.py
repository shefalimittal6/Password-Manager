# -*- coding: utf-8 -*-
"""PasswordManager.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JyfBAoGJ_Nq-P5m8cZKQf46IwFw__jEK
"""

import json
import os
from cryptography.fernet import Fernet
import getpass

# Constants
ENCRYPTIONKEY_FILE = 'encryptionkey.key'
PASSWORD_FILE = 'password.json'

# Generate an encryption key and save it into a file
def generate_encryption_key():
    encryption_key = Fernet.generate_key()
    with open(ENCRYPTIONKEY_FILE, 'wb') as encryptionkey_file:
        encryptionkey_file.write(encryption_key)

# Load the encryption key from the current directory named `encryptionkey.key`
def load_encryption_key():
    return open(ENCRYPTIONKEY_FILE, 'rb').read()

# Encrypt a message
def encrypt_data(data, encryption_key):
    f = Fernet(encryption_key)
    return f.encrypt(data.encode())

# Decrypt a message
def decrypt_data(encrypted_data, encryption_key):
    f = Fernet(encryption_key)
    return f.decrypt(encrypted_data).decode()

# Save passwords to a file
def save_passwords(password):
    with open(PASSWORD_FILE, 'w') as file:
        json.dump(password, file)

# Load passwords from a file
def load_passwords():
    if os.path.exists(PASSWORD_FILE):
        with open(PASSWORD_FILE, 'r') as file:
            return json.load(file)
    return {}

# Main password manager logic
def password_manager():
    if not os.path.exists(ENCRYPTIONKEY_FILE):
        generate_encryption_key()

    encryption_key = load_encryption_key()
    password = load_passwords()

    while True:
        print("Password Manager")
        print("1. Add new password")
        print("2. Retrieve password")
        print("3. Exit")

        choice = input("Choose an option: ")

        if choice == '1':
            servicename = input("Enter the service name: ")
            username = input("Enter the username: ")
            password_data = getpass.getpass("Enter the password: ")

            encrypted_password = encrypt_data(password_data, encryption_key)
            password[servicename] = {'username': username, 'password': encrypted_password.decode()}

            save_passwords(password)
            print(f"Password for {servicename} saved.")

        elif choice == '2':
            servicename = input("Enter the service name: ")
            if servicename in password:
                encrypted_password = password[servicename]['password']
                username = password[servicename]['username']
                decrypted_password = decrypt_data(encrypted_password.encode(), encryption_key)
                print(f"Service: {servicename}\nUsername: {username}\nPassword: {decrypted_password}")
            else:
                print(f"No password found for {servicename}.")

        elif choice == '3':
            print("Exiting Password Manager.")
            break

        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    password_manager()